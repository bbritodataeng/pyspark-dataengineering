# Para iniciar:

Antes de tudo, é necessário ter o PostgreSQL instalado localmente caso a ingestão seja realizada no mesmo. É preciso também criar o banco que será alimentado pelo PySpark e ter uma tabela criada dentro dele.

1. Baixe o dataset de dados que deseja manipular, escrever ou ler conforme a sua necessidade: https://www.datascientist.com.br/bigdata/download.zip

2. Para garantir a conexão do script com o banco de dados, baixe a versão do JDBC (conector do banco) compatível com o seu Java e PostgreSQL no site oficial: https://jdbc.postgresql.org/download/. Após o download, presumindo que o PySpark esteja devidamente instalado, execute no terminal:
pyspark --jars caminho-do-conector/conector123.jar

Depois de realizar as configurações necessárias, basta importar o SparkSession. Aproveitando que o terminal já se encontra com o PySpark shell devidamente ativo, execute o seguinte código:

from pyspark.sql import SparkSession

# Após a importação, crie a sessão conforme desejado:
spark = SparkSession.builder.appName('NOME_DESEJADO').getOrCreate()

Agora é possível criar o DataFrame que desejamos no PySpark. Para isso, utilize o seguinte código:

# dataframe = spark.read.csv('Caminho_do_arquivo/arquivo.csv')

# Cheque a criação:
dataframe.show(10)

Assumindo que o banco criado foi o banco de dados 'portfolio', faça a escrita do DataFrame no banco de dados através do seguinte comando:

dataframe.write.format('jdbc').option('url','jdbc:postgresql://localhost:5432/portfolio').option('dbtable','NOME_DA_TABELA_DESEJADA').option('user','postgres').option('password','SENHA_DO_SEU_BANCO').option('driver','org.postgresql.Driver').save()

Para conferir se a ingestão foi devidamente realizada, realize a carga dos dados ingeridos:

ingestao_check = spark.read.format('jdbc').option('url','jdbc:postgresql://localhost:5432/portfolio').option('dbtable','NOME_DA_TABELA_DESEJADA').option('user','postgres').option('password','SENHA_DO_SEU_BANCO').option('driver','org.postgresql.Driver').load()

Logo após, leia a carga de dados realizada anteriormente:

ingestao_check.show(10)
